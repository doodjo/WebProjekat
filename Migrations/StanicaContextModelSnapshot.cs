// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using models;

namespace WebProjekat.Migrations
{
    [DbContext(typeof(StanicaContext))]
    partial class StanicaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("models.Destinacija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Drzava")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Grad")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("IDFirmeID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IDFirmeID");

                    b.ToTable("Destinacije");
                });

            modelBuilder.Entity("models.Firma", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrSedista")
                        .HasMaxLength(4)
                        .HasColumnType("int");

                    b.Property<string>("ImeKompanije")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Firme");
                });

            modelBuilder.Entity("models.Putnik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrTelefona")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("JMBG")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Putnik");
                });

            modelBuilder.Entity("models.Ruta", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cena")
                        .HasColumnType("int");

                    b.Property<int?>("DestinacijaID")
                        .HasColumnType("int");

                    b.Property<int?>("PutnikID")
                        .HasColumnType("int");

                    b.Property<int?>("StanicaID")
                        .HasColumnType("int");

                    b.Property<string>("TipSedista")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DestinacijaID");

                    b.HasIndex("PutnikID");

                    b.HasIndex("StanicaID");

                    b.ToTable("Rute");
                });

            modelBuilder.Entity("models.Stanica", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImeGrada")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImeStanice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Stanice");
                });

            modelBuilder.Entity("models.Destinacija", b =>
                {
                    b.HasOne("models.Firma", "IDFirme")
                        .WithMany()
                        .HasForeignKey("IDFirmeID");

                    b.Navigation("IDFirme");
                });

            modelBuilder.Entity("models.Ruta", b =>
                {
                    b.HasOne("models.Destinacija", "Destinacija")
                        .WithMany("RutaKompanija")
                        .HasForeignKey("DestinacijaID");

                    b.HasOne("models.Putnik", "Putnik")
                        .WithMany("PutnikRute")
                        .HasForeignKey("PutnikID");

                    b.HasOne("models.Stanica", "Stanica")
                        .WithMany("Rute")
                        .HasForeignKey("StanicaID");

                    b.Navigation("Destinacija");

                    b.Navigation("Putnik");

                    b.Navigation("Stanica");
                });

            modelBuilder.Entity("models.Destinacija", b =>
                {
                    b.Navigation("RutaKompanija");
                });

            modelBuilder.Entity("models.Putnik", b =>
                {
                    b.Navigation("PutnikRute");
                });

            modelBuilder.Entity("models.Stanica", b =>
                {
                    b.Navigation("Rute");
                });
#pragma warning restore 612, 618
        }
    }
}
